// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by SqlPlus.net
//     For more information on SqlPlus.net visit http://www.SqlPlus.net
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Data;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

namespace MovieTraders.Data.UserDefinedTypes
{
    public interface ITinyInts
	{
        byte Id { set; get; }
    }

    public class TinyInts : ITinyInts
    {
        [Required]
        public byte Id { set; get; }

        /// <summary>
        /// This method executes validation against the data annotations.
        /// If overridden in a derived class use base.IsValid() after any custom validation.
        /// </summary>
        public virtual bool IsValid()
        {
            Validator.TryValidateObject(this, new ValidationContext(this), ValidationResults, true);
            return ValidationResults.Count == 0;
        }

        /// <summary>
        /// List of Validation Results.
        /// </summary>
        public List<ValidationResult> ValidationResults { set; get; } = new List<ValidationResult>();
    }

	public static class TinyIntsHelpers
    {
        public static DataTable BuildDataTable(List<ITinyInts> input)
        {
            DataTable dt = new DataTable();
            dt.Columns.Add("Id", typeof(byte));
            if(input != null)
			{
                foreach(TinyInts item in input)
                {
                    DataRow rw = dt.NewRow();
                    rw[0] = item.Id;
                    dt.Rows.Add(rw);
                }
			}
            return dt;
        }
    }
}